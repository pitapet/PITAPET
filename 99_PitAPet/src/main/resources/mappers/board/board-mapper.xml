<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.kh.pitapet.community.model.dao.BoardMapper">
	<sql id="boardListSql">
		SELECT  B.BOARD_NO, 
		        B.TITLE, 
		        B.WRITER_NO,
		        M.ID, 
		        M.pet,
		        B.READCOUNT, 
		        B.ORIGINAL_FILENAME, 
		        B.RENAME_FILENAME, 
		        B.CONTENT,
		        B.CREATE_DATE, 
		        B.MODIFY_DATE
		FROM BOARD B
		JOIN MEMBER M ON(B.WRITER_NO = M.NO)
		WHERE B.STATUS = 'Y'
	</sql>
	
	<resultMap type="Board" id="boardListResultMap">
		<id property="no" column="BOARD_NO"/>
		<result property="title" column="TITLE"/>
		<result property="writerNo" column="WRITER_NO"/>
		<result property="writerId" column="ID"/>
		<result property="writerPet" column="PET"/>		
		<result property="readCount" column="READCOUNT"/>
		<result property="originalFileName" column="ORIGINAL_FILENAME"/>
		<result property="renameFileName" column="RENAME_FILENAME"/>
		<result property="content" column="CONTENT"/>
		<result property="createDate" column="CREATE_DATE"/>
		<result property="modifyDate" column="MODIFY_DATE"/>
	</resultMap>
	
	<resultMap type="Reply" id="replyResultMap">
      <id property="no" column="REPLY_NO"/>
      <result property="boardNo" column="REPLY_BOARD"/>
      <result property="replyMember" column="REPLY_MEMBER"/>
      <result property="writerId" column="ID"/>
      <result property="content" column="REPLY_CONT"/>
      <result property="createDate" column="REPLY_DATE"/>
      <result property="modifyDate" column="REPLY_MODIFY"/>
   </resultMap>
	
	<resultMap type="Board" extends="boardListResultMap" id="boardDetailResultMap">
		<collection property="replies" javaType="arraylist" columnPrefix="R_" resultMap="replyResultMap"/>
	</resultMap>
	
	<resultMap type="Reply" extends="replyResultMap" id="replyDetailResultMap">
		<collection property="replies" javaType="arraylist" columnPrefix="R_" resultMap="replyResultMap"/>
	</resultMap>
	
	<select id="findAll" parameterType="map" resultMap="boardListResultMap">
		<include refid="boardListSql"/>
		<choose>
			<when test="writer != null">
				AND M.ID LIKE '%' || #{writer} || '%'
			</when>
			<when test="title != null">
				AND B.TITLE LIKE '%' || #{title} || '%'
			</when>
			<when test="content != null">
				AND B.CONTENT LIKE '%' || #{content} || '%'
			</when>
		</choose>
		ORDER BY B.BOARD_NO DESC
	</select>
	
	<select id="listAll" parameterType="map" resultMap="boardListResultMap">
		<!-- <include refid="boardListSql"/>  -->
		<include refid="search"/>
			ORDER BY B.BOARD_NO DESC
	</select>
	
	<sql id="search">
        <choose>
            <when test="search_option == 'all' ">
                where  
                      writerId like '%'||#{keyword}||'%'
                      or content like '%' || #{keyword}||'%'
                      or title like '%'||#{keyword}||'%'   
            </when>
            <otherwise>
                where ${search_option} like '%'||#{keyword}||'%'
            </otherwise>
        </choose>
    </sql>
	
	<select id="getBoardCount" parameterType="map" resultType="_int">
		SELECT COUNT(*) 
		FROM BOARD
		WHERE STATUS = 'Y'
		<choose>
			<when test="writer != null">
				AND M.ID LIKE '%' || #{writer} || '%'
			</when>
			<when test="title != null">
				AND B.TITLE LIKE '%' || #{title} || '%'
			</when>
			<when test="content != null">
				AND B.CONTENT LIKE '%' || #{content} || '%'
			</when>
		</choose>
	</select>
	
	<select id="selectBoardListByFilters" parameterType="map" resultMap="boardListResultMap">
		<include refid="boardListSql"/>
		<if test="filters != null">
		  AND B.TYPE IN 
		  <foreach collection="filters" item="filter" open="(" separator="," close=")">
	  		#{filter}
		  </foreach>
		</if>
	</select>
	
	<select id="getBoardCountByFilters" parameterType="map" resultType="_int">
		SELECT COUNT(*) 
		FROM BOARD
		WHERE STATUS = 'Y'
		<if test="list != null">
		  AND TYPE IN 
		  <foreach collection="list" item="filter" open="(" separator="," close=")">
	  		#{filter}
		  </foreach>
		</if>
	</select>
	
	<select id="selectBoardByNo" parameterType="_int" resultMap="boardDetailResultMap">
		SELECT B.BOARD_NO,
		       B.TITLE,
		       B.WRITER_NO,
		       M.ID,
		       B.READCOUNT,
		       B.ORIGINAL_FILENAME,
		       B.RENAME_FILENAME,
		       B.CONTENT,
		       B.CREATE_DATE, 
		       B.MODIFY_DATE,
		       R.REPLY_NO,  
		       R.REPLY_BOARD,  
		       R.REPLY_CONT, 
		       M.ID,  
		       M.pet,
		       R.REPLY_DATE,  
		       R.REPLY_MODIFY
		FROM BOARD B
		JOIN MEMBER M ON(B.WRITER_NO = M.NO)
		LEFT OUTER JOIN REPLY R ON(B.BOARD_NO = R.REPLY_BOARD)
		LEFT OUTER JOIN MEMBER M2 ON(R.REPLY_MEMBER = M2.NO)
		WHERE B.STATUS = 'Y' AND B.BOARD_NO = #{no}
	</select>
	
	<select id="selectReplyByNo" parameterType="_int" resultMap="replyDetailResultMap">
		SELECT R.REPLY_NO,  
		       R.REPLY_BOARD,  
		       R.REPLY_CONT, 
		       M.ID,  
		       R.REPLY_DATE,  
		       R.REPLY_MODIFY
		FROM REPLY R
		JOIN MEMBER M ON(R.REPLY_MEMBER = M.NO)
		WHERE R.REPLY_STATUS = 'Y'
	</select>
	
	<insert id="insertBoard" parameterType="Board"
			useGeneratedKeys="true" keyProperty="no" keyColumn="BOARD_NO">
		INSERT INTO BOARD (
			BOARD_NO,
			WRITER_NO,
			TITLE,
			CONTENT,
			ORIGINAL_FILENAME,
			RENAME_FILENAME,
			READCOUNT,
			STATUS,
			CREATE_DATE,
			MODIFY_DATE
		) VALUES (
			SEQ_BOARD_NO.NEXTVAL,
			#{writerNo},
			#{title},
			#{content},
			#{originalFileName},
			#{renameFileName},
			DEFAULT,
			DEFAULT,
			#{createDate},
			#{modifyDate}
		)
	</insert>
	
	<update id="updateBoard" parameterType="Board">
       	UPDATE BOARD
       	<trim prefix="SET" suffixOverrides=",">
    	    <if test="title != null">
		 		TITLE = #{title},
	 		</if>
	 		<if test="content != null">
		 		CONTENT = #{content},
	 		</if>
	 		<if test="originalFileName != null">
		 		ORIGINAL_FILENAME = #{originalFileName},
	 		</if>
	 		<if test="renameFileName != null">
		 		RENAME_FILENAME = #{renameFileName},
	 		</if>
		 	MODIFY_DATE = SYSDATE 
       	</trim>
	 	WHERE 
	 		BOARD_NO = #{no}
	</update>
	
	<update id="updateStatus" parameterType="map">
		UPDATE BOARD SET STATUS = #{status} WHERE BOARD_NO = #{no}
	</update>
	
	<!-- 댓글 -->
	<select id="getReplyCount" parameterType="map" resultType="_int">
      SELECT COUNT(*) 
      FROM REPLY
      WHERE REPLY_STATUS = 'Y'
      <choose>
         <when test="writer != null">
            AND M.ID LIKE '%' || #{writer} || '%'
         </when>
         <when test="content != null">
            AND R.REPLY_CONT LIKE '%' || #{content} || '%'
         </when>
      </choose>
   </select>

   <insert id="insertReply" parameterType="Reply"
         useGeneratedKeys="true" keyProperty="no" keyColumn="REPLY_NO">
      INSERT REPLY (
         REPLY_NO,
         REPLY_BOARD,
         REPLY_MEMBER,
         REPLY_CONT,
         REPLY_STATUS,
         REPLY_DATE,
         REPLY_MODIFY
      ) VALUES (
         SEQ_REPLY_NO.NEXTVAL,
         #{boardNo},
         #{replyMember},
         #{content},
         DEFAULT,
         #{createDate},
         #{modifyDate}
      )
   </insert>

   <update id="updateReply" parameterType="Reply">
          UPDATE BOARD
          <trim prefix="SET" suffixOverrides=",">
          <if test="content != null">
             CONTENT = #{content},
          </if>
          MODIFY_DATE = SYSDATE 
          </trim>
       WHERE 
          REPLY_NO = #{no}
   </update>
   
   <update id="updateReplyStatus" parameterType="map">
      UPDATE REPLY SET STATUS = #{status} WHERE REPLY_NO = #{no}
   </update>
	
	
	
</mapper>