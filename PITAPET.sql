--CREATE USER PITAPET IDENTIFIED BY "PITAPET";
--GRANT RESOURCE, CONNECT, DBA TO PITAPET;

------------------------------------------------
----------------- 회원 관련 테이블 ----------------
------------------------------------------------
CREATE TABLE MEMBER (
    NO NUMBER PRIMARY KEY,
    ID VARCHAR2(30) NOT NULL UNIQUE,
    PASSWORD VARCHAR2(100) NOT NULL,
    ROLE VARCHAR2(10) DEFAULT 'ROLE_USER',
    NAME VARCHAR2(15) NOT NULL,
    NICKNAME VARCHAR2(15) NOT NULL,
    PHONE VARCHAR2(13),
    EMAIL VARCHAR2(100),
    ADDRESS VARCHAR2(100),
    PET VARCHAR2(100),
    STATUS VARCHAR2(1) DEFAULT 'Y' CHECK(STATUS IN('Y', 'N')),
    ENROLL_DATE DATE DEFAULT SYSDATE,
    MODIFY_DATE DATE DEFAULT SYSDATE
);
--DROP TABLE MEMBER;

COMMENT ON COLUMN MEMBER.NO IS '회원번호';
COMMENT ON COLUMN MEMBER.ID IS '회원아이디';
COMMENT ON COLUMN MEMBER.PASSWORD IS '회원비밀번호';
COMMENT ON COLUMN MEMBER.ROLE IS '회원타입';
COMMENT ON COLUMN MEMBER.NAME IS '회원명';
COMMENT ON COLUMN MEMBER.NICKNAME IS '회원닉네임';
COMMENT ON COLUMN MEMBER.PHONE IS '전화번호';
COMMENT ON COLUMN MEMBER.EMAIL IS '이메일';
COMMENT ON COLUMN MEMBER.ADDRESS IS '주소';
COMMENT ON COLUMN MEMBER.PET IS '애완동물';
COMMENT ON COLUMN MEMBER.STATUS IS '상태값(Y/N)';
COMMENT ON COLUMN MEMBER.ENROLL_DATE IS '회원가입일';
COMMENT ON COLUMN MEMBER.MODIFY_DATE IS '정보수정일';

CREATE SEQUENCE SEQ_UNO;
--DROP SEQUENCE SEQ_UNO;

INSERT INTO MEMBER (
    NO, 
    ID, 
    PASSWORD, 
    ROLE,
    NAME, 
    NICKNAME,
    PHONE, 
    EMAIL, 
    ADDRESS, 
    PET, 
    STATUS, 
    ENROLL_DATE, 
    MODIFY_DATE
) VALUES(
    SEQ_UNO.NEXTVAL, 
    'eaaha', 
    '1234', 
    'USER', 
    '사용자', 
    'ㄴㅇㅅ',
    '010-4179-4341', 
    'admin@iei.or.kr', 
    '서울시 강남구 역삼동',
    NULL,
    DEFAULT,
    DEFAULT,
    DEFAULT
);

-------------------------------------------------
----------------- 상품 관련 테이블 -----------------
-------------------------------------------------
CREATE TABLE PRODUCT (
    NO NUMBER PRIMARY KEY,
    TITLE VARCHAR2(50) NOT NULL,
    CONTENT VARCHAR2(1000) NOT NULL,
    PRICE NUMBER NOT NULL,
    CREATED_DATE DATE DEFAULT SYSDATE,
    MODIFY_DATE DATE DEFAULT SYSDATE
);
--DROP TABLE PRODUCT;
/*
DROP TABLE PRODUCT_IMAGE;
DROP SEQUENCE SEQ_PRODUCT_IMG_NO;
*/
CREATE SEQUENCE SEQ_PRODUCT_NO;
--DROP SEQUENCE SEQ_PRODUCT_NO;

COMMENT ON COLUMN PRODUCT.NO IS '상품번호';
COMMENT ON COLUMN PRODUCT.TITLE IS '상품명';
COMMENT ON COLUMN PRODUCT.CONTENT IS '상품설명';
COMMENT ON COLUMN PRODUCT.PRICE IS '가격(단위:원)';
COMMENT ON COLUMN PRODUCT.CREATED_DATE IS '상품등록일';
COMMENT ON COLUMN PRODUCT.MODIFY_DATE IS '상품수정일';

INSERT INTO PRODUCT VALUES(SEQ_PRODUCT_NO.NEXTVAL, 'HAND GRIPPER', '핸드폰에 부착할 수 있는 그립톡입니다.', 10000, DEFAULT, DEFAULT);

INSERT INTO PRODUCT VALUES(SEQ_PRODUCT_NO.NEXTVAL, 'PANDENT', '가방, 핸드폰 등에 달고 다닐 수 있는 팬던트입니다.', 15000, DEFAULT, DEFAULT);
INSERT INTO PRODUCT VALUES(SEQ_PRODUCT_NO.NEXTVAL, 'PANDENT', '가방, 핸드폰 등에 달고 다닐 수 있는 팬던트입니다.', 15000, DEFAULT, DEFAULT);
INSERT INTO PRODUCT VALUES(SEQ_PRODUCT_NO.NEXTVAL, 'PANDENT', '가방, 핸드폰 등에 달고 다닐 수 있는 팬던트입니다.', 15000, DEFAULT, DEFAULT);

INSERT INTO PRODUCT VALUES(SEQ_PRODUCT_NO.NEXTVAL, 'FOOT MAT', '문 앞에 배치할 수 있는 발매트입니다.', 12000, DEFAULT, DEFAULT);
INSERT INTO PRODUCT VALUES(SEQ_PRODUCT_NO.NEXTVAL, 'FOOT MAT', '문 앞에 배치할 수 있는 발매트입니다.', 12000, DEFAULT, DEFAULT);
INSERT INTO PRODUCT VALUES(SEQ_PRODUCT_NO.NEXTVAL, 'FOOT MAT', '문 앞에 배치할 수 있는 발매트입니다.', 12000, DEFAULT, DEFAULT);

-------------------------------------------------
------------- 상품 상세정보 관련 테이블 -------------
-------------------------------------------------
CREATE TABLE PRODUCT_INFO (
    NO NUMBER PRIMARY KEY,
    PRODUCT_NO NUMBER NOT NULL,
    COLOR_NAME VARCHAR2(50),
    COLOR_CODE VARCHAR2(50),
    IMAGE_NAME VARCHAR2(100),
    STOCK NUMBER NOT NULL,
    STATUS VARCHAR2(1) DEFAULT 'Y' CHECK (STATUS IN('Y', 'N')),
    CREATED_DATE DATE DEFAULT SYSDATE,
    MODIFY_DATE DATE DEFAULT SYSDATE,
    CONSTRAINT FK_INFO_PRODUCT_NO FOREIGN KEY(PRODUCT_NO) REFERENCES PRODUCT(NO) ON DELETE SET NULL
);
--DROP TABLE PRODUCT_INFO;

CREATE SEQUENCE SEQ_INFO_NO;
--DROP SEQUENCE SEQ_INFO_NO;

COMMENT ON COLUMN PRODUCT_INFO.NO IS '상세정보번호';
COMMENT ON COLUMN PRODUCT_INFO.PRODUCT_NO IS '상품번호';
COMMENT ON COLUMN PRODUCT_INFO.COLOR_NAME IS '색상명';
COMMENT ON COLUMN PRODUCT_INFO.COLOR_CODE IS '색상코드';
COMMENT ON COLUMN PRODUCT_INFO.IMAGE_NAME IS '상품이미지명';
COMMENT ON COLUMN PRODUCT_INFO.STOCK IS '재고수량';
COMMENT ON COLUMN PRODUCT_INFO.STATUS IS '상태값(Y/N)';
COMMENT ON COLUMN PRODUCT_INFO.CREATED_DATE IS '상품정보등록일';
COMMENT ON COLUMN PRODUCT_INFO.MODIFY_DATE IS '상품정보수정일';

INSERT INTO PRODUCT_INFO VALUES(SEQ_INFO_NO.NEXTVAL, 1, 'WHITE', '#FFFFFF', 'handgripper_white_01', 10, 'Y', DEFAULT, DEFAULT);

INSERT INTO PRODUCT_INFO VALUES(SEQ_INFO_NO.NEXTVAL, 2, 'GOLD', '#EDD8A6', 'pandent_gold_01', 15, 'Y', DEFAULT, DEFAULT);
INSERT INTO PRODUCT_INFO VALUES(SEQ_INFO_NO.NEXTVAL, 2, 'ROSEGOLD', '#EEB0A5', 'pandent_rosegold_01', 15, 'Y', DEFAULT, DEFAULT);
INSERT INTO PRODUCT_INFO VALUES(SEQ_INFO_NO.NEXTVAL, 2, 'SILVER', '#CFD2D7', 'pandent_silver_01', 20, 'Y', DEFAULT, DEFAULT);

INSERT INTO PRODUCT_INFO VALUES(SEQ_INFO_NO.NEXTVAL, 3, 'MINT', '#9DC69C', 'footmat_mint_01', 10, 'Y', DEFAULT, DEFAULT);
INSERT INTO PRODUCT_INFO VALUES(SEQ_INFO_NO.NEXTVAL, 3, 'BLUE', '#B5C6DA', 'footmat_blue_01', 10, 'Y', DEFAULT, DEFAULT);
INSERT INTO PRODUCT_INFO VALUES(SEQ_INFO_NO.NEXTVAL, 3, 'WHITE', '#F2F1ED', 'footmat_white_01', 0, 'Y', DEFAULT, DEFAULT);

-- 품절된 상품 조회
SELECT P.NO, 
       P.TITLE, 
       P.CONTENT, 
       P.PRICE, 
       I.COLOR_NAME,
       I.COLOR_CODE,
       I.IMAGE_NAME,
       I.STATUS,
       I.STOCK,
       P.CREATED_DATE, 
       P.MODIFY_DATE,
       I.CREATED_DATE,
       I.MODIFY_DATE
FROM PRODUCT P
JOIN PRODUCT_INFO I ON (P.NO = I.PRODUCT_NO)
WHERE I.STATUS = 'Y'
AND I.STOCK = 0;

-- 번호로 상품 조회
SELECT P.NO, 
       P.TITLE, 
       P.CONTENT, 
       P.PRICE, 
       I.COLOR_NAME,
       I.COLOR_CODE,
       I.IMAGE_NAME,
       I.STATUS,
       I.STOCK,
       P.CREATED_DATE, 
       P.MODIFY_DATE,
       I.CREATED_DATE,
       I.MODIFY_DATE
FROM PRODUCT P
JOIN PRODUCT_INFO I ON (P.NO = I.PRODUCT_NO)
WHERE P.NO = 2
AND I.STATUS = 'Y';
/* AND STOCK > 0 */

-- 판매 중인 상품 번호와 상세 번호 조회
SELECT P.NO, I.NO
FROM PRODUCT P
JOIN PRODUCT_INFO I ON (P.NO = I.PRODUCT_NO)
WHERE I.STOCK > 0
AND I.STATUS = 'Y';

-- 상품번호와 색상으로 이미지명 조회
SELECT I.IMAGE_NAME
FROM PRODUCT_INFO I 
JOIN PRODUCT P ON (P.NO = I.PRODUCT_NO)
WHERE P.NO = 1
AND I.COLOR_NAME = 'WHITE';

-- 재고 수량 변경
/*
UPDATE PRODUCT
SET STOCK = 4
WHERE NO = 1;
*/

--COMMIT;

-- MAPPER.XML
SELECT P.NO, 
		       P.TITLE, 
		       P.CONTENT, 
		       P.PRICE, 
		       I.NO AS I_NO,
		       I.PRODUCT_NO AS I_PRODUCT_NO,
		       I.COLOR_NAME AS I_COLOR_NAME,
		       I.COLOR_CODE AS I_COLOR_CODE,
		       I.IMAGE_NAME AS I_IMAGE_NAME,
		       I.STATUS AS I_STATUS,
		       I.STOCK AS I_STOCK,
		       P.CREATED_DATE, 
		       P.MODIFY_DATE,
		       I.CREATED_DATE AS I_CREATED_DATE,
		       I.MODIFY_DATE AS I_MODIFY_DATE
		 FROM PRODUCT P
		 JOIN PRODUCT_INFO I ON (P.NO = I.PRODUCT_NO)
		 WHERE I.STATUS = 'Y'
		 AND P.NO = 1;

------------------------------------------------------
---------------- 상품 장바구니 관련 테이블 ----------------
------------------------------------------------------
CREATE TABLE PRODUCT_CART (
    NO NUMBER PRIMARY KEY,
    PRICE NUMBER,
    COUNT NUMBER,
    MEMBER_NO NUMBER,
    PRODUCT_NO NUMBER,
    CONSTRAINT FK_CART_MEMBER FOREIGN KEY(MEMBER_NO) REFERENCES MEMBER(NO) ON DELETE SET NULL,
    CONSTRAINT FK_CART_PRODUCT FOREIGN KEY(PRODUCT_NO) REFERENCES PRODUCT(NO) ON DELETE SET NULL
);
--DROP TABLE PRODUCT_CART;

CREATE SEQUENCE SEQ_PRODUCT_CART_NO;
--DROP SEQUENCE SEQ_PRODUCT_CART_NO;

COMMENT ON COLUMN PRODUCT_CART.NO IS '주문번호';
COMMENT ON COLUMN PRODUCT_CART.PRICE IS '주문가격';
COMMENT ON COLUMN PRODUCT_CART.COUNT IS '주문수량';
COMMENT ON COLUMN PRODUCT_CART.MEMBER_NO IS '회원번호';
COMMENT ON COLUMN PRODUCT_CART.PRODUCT_NO IS '상품번호';

INSERT INTO PRODUCT_CART VALUES(SEQ_PRODUCT_CART_NO.NEXTVAL, 20000, 2, 1, 1);
INSERT INTO PRODUCT_CART VALUES(SEQ_PRODUCT_CART_NO.NEXTVAL, 30000, 2, 1, 2);

SELECT C.NO AS 주문번호, M.NO AS 회원번호, P.TITLE AS 제품명, P.PRICE AS 제품가격, C.COUNT AS 주문수량, C.PRICE AS 주문가격
FROM PRODUCT_CART C
JOIN MEMBER M ON (C.MEMBER_NO = M.NO)
JOIN PRODUCT P ON (C.PRODUCT_NO = P.NO);

-------------------------------------------------------
--------------- 유기동물 보호센터 관련 테이블 --------------
-------------------------------------------------------
CREATE TABLE CENTER(
   SUM_YY VARCHAR(10),
   SIGUN_NM VARCHAR(15),
   SIGUN_CD VARCHAR(10),
   ENTRPS_NM VARCHAR(20),
   ENTRPS_TELNO VARCHAR(15),
   REPRSNTV_NM VARCHAR(10),
   CONTRACT_PERD VARCHAR(10),
   ACEPTNC_ABLTY_CNT VARCHAR(10),
   CORPR_ANIMAL_HOSPTL_DTLS VARCHAR(30),
   RM_MATR VARCHAR(20),
   REFINE_ZIP_CD VARCHAR(10),
   REFINE_LOTNO_ADDR VARCHAR(30),
   REFINE_ROADNM_ADDR VARCHAR(30),
   REFINE_WGS84_LAT VARCHAR(20),
   REFINE_WGS84_LOGT VARCHAR(20)
);
--DROP TABLE CENTER;

COMMENT ON COLUMN CENTER.SUM_YY IS '집계년도';
COMMENT ON COLUMN CENTER.SIGUN_NM IS '시군명';
COMMENT ON COLUMN CENTER.SIGUN_CD IS '시군코드';
COMMENT ON COLUMN CENTER.ENTRPS_NM IS '업체명';
COMMENT ON COLUMN CENTER.ENTRPS_TELNO IS '업체전화번호';
COMMENT ON COLUMN CENTER.REPRSNTV_NM IS '대표자명';
COMMENT ON COLUMN CENTER.CONTRACT_PERD IS '계약기간';
COMMENT ON COLUMN CENTER.ACEPTNC_ABLTY_CNT IS '수용능력수';
COMMENT ON COLUMN CENTER.CORPR_ANIMAL_HOSPTL_DTLS IS '협력동물병원내역';
COMMENT ON COLUMN CENTER.RM_MATR IS '비고사항';
COMMENT ON COLUMN CENTER.REFINE_ZIP_CD IS '소재지우편번호';
COMMENT ON COLUMN CENTER.REFINE_LOTNO_ADDR IS '소재지지번주소';
COMMENT ON COLUMN CENTER.REFINE_ROADNM_ADDR IS '소재지도로명주소';
COMMENT ON COLUMN CENTER.REFINE_WGS84_LAT IS 'WGS84위도';
COMMENT ON COLUMN CENTER.REFINE_WGS84_LOGT IS 'WGS84경도';

------------------------------------------------
--------------- 커뮤니티 관련 테이블 ---------------
------------------------------------------------
CREATE TABLE BOARD(
    BOARD_NO          NUMBER,
    WRITER_NO         NUMBER NOT NULL,
    TITLE             VARCHAR2(50) NOT NULL,
    CONTENT           VARCHAR2(2000) NOT NULL,
    ORIGINAL_FILENAME VARCHAR2(100),
    RENAME_FILENAME   VARCHAR2(100),
    READCOUNT         NUMBER DEFAULT 0,
    STATUS            VARCHAR2(1) DEFAULT 'Y' CHECK(STATUS IN('Y', 'N')),
    CREATE_DATE       DATE,
    MODIFY_DATE       DATE, 
    CONSTRAINT PK_BOARD_NO PRIMARY KEY(BOARD_NO),
    CONSTRAINT FK_WRITER_NO FOREIGN KEY(WRITER_NO) REFERENCES MEMBER(NO)
);
--DROP TABLE BOARD;

COMMENT ON COLUMN BOARD.BOARD_NO IS '게시글 번호';
COMMENT ON COLUMN BOARD.WRITER_NO IS '게시글 작성자';
COMMENT ON COLUMN BOARD.TITLE IS '게시글 제목';
COMMENT ON COLUMN BOARD.CONTENT IS '게시글 내용';
COMMENT ON COLUMN BOARD.ORIGINAL_FILENAME IS '첨부파일 원래이름';
COMMENT ON COLUMN BOARD.RENAME_FILENAME IS '첨부파일 변경이름';
COMMENT ON COLUMN BOARD.READCOUNT IS '조회수';
COMMENT ON COLUMN BOARD.STATUS IS '상태값(Y/N)';
COMMENT ON COLUMN BOARD.CREATE_DATE IS '게시글 작성일';
COMMENT ON COLUMN BOARD.MODIFY_DATE IS '게시글 수정일';

CREATE SEQUENCE SEQ_BOARD_NO;
--DROP SEQUENCE SEQ_BOARD_NO;

-- 총 게시글 갯수
-- SELECT COUNT(*) FROM BOARD WHERE STATUS='Y'

-- 조회수 증가
-- UPDATE BOARD SET READCOUNT=? WHERE BOARD_NO=?

-- 게시글 작성
-- INSERT INTO BOARD VALUES(SEQ_BOARD_BOARD_NO.NEXTVAL,?,?,?,?,DEFAULT,DEFAULT,DEFAULT,DEFAULT)

-- 게시글 수정
-- UPDATE BOARD SET TITLE=?,CONTENT=?, MODIFY_DATE=SYSDATE WHERE BOARD_NO=?

-- 게시글 삭제
-- UPDATE BOARD SET STATUS=? WHERE BOARD_NO=?

-- 상세 조회
/*
SELECT  B.BOARD_NO, B.BOARD_TITLE, B.BOARD_SGROUP_NO, M.ID, B.BOARD_READCOUNT, B.BOARD_CONT, B.BOARD_LIKE, B.BOARD_CREATE, B.BOARD_MODIFY
FROM BOARD B
JOIN MEMBER M ON(B.WRITER_NO = M.MEMBER_NO)
WHERE B.STATUS = 'Y' AND B.WRITER_NO=?
*/

-- 게시글 테스트용 데이터
--INSERT INTO BOARD VALUES(SEQ_BOARD_NO.NEXTVAL, 1, '게시글 1',  '이 게시글은 영국에서 시작해서...', DEFAULT, DEFAULT, DEFAULT,'Y', SYSDATE, SYSDATE);
--
--COMMIT;
--
--BEGIN
--    FOR N IN 1..52
--    LOOP
--        INSERT INTO BOARD VALUES(SEQ_BOARD_NO.NEXTVAL, 1, '게시글 ' || SEQ_BOARD_NO.CURRVAL , '이 게시글은 영국에서 시작해서..' ||  SEQ_BOARD_NO.CURRVAL,DEFAULT, DEFAULT, DEFAULT,'Y', SYSDATE, SYSDATE;
--    END LOOP;
--    
--    COMMIT;
--EXCEPTION
--    WHEN OTHERS THEN ROLLBACK;
--END;
/

INSERT INTO BOARD VALUES(SEQ_BOARD_NO.NEXTVAL, 1, '게시글제목', '이 게시글은 영국에서 시작해서...', DEFAULT, DEFAULT, DEFAULT, DEFAULT, SYSDATE, SYSDATE);
INSERT INTO BOARD VALUES(SEQ_BOARD_NO.NEXTVAL, 1, '게시글제목', '이 게시글은 영국에서 시작해서...', DEFAULT, DEFAULT, DEFAULT, DEFAULT, SYSDATE, SYSDATE);

------------------------------------------------
-------------- 게시글 댓글 관련 테이블 -------------
------------------------------------------------
CREATE TABLE REPLY(
    REPLY_NO     NUMBER,
    REPLY_BOARD  NUMBER, 
    REPLY_MEMBER NUMBER NOT NULL,
    REPLY_CONT   VARCHAR2(100) NOT NULL,
    REPLY_STATUS VARCHAR2(1) DEFAULT 'Y' CHECK(REPLY_STATUS IN('Y', 'N')),
    REPLY_DATE   DATE DEFAULT SYSDATE,
    REPLY_MODIFY DATE DEFAULT SYSDATE,
    CONSTRAINT PK_REPLY_NO PRIMARY KEY(REPLY_NO),
    CONSTRAINT FK_REPLY_BOARD FOREIGN KEY(REPLY_BOARD) REFERENCES BOARD(BOARD_NO),
    CONSTRAINT FK_REPLY_MEMBER FOREIGN KEY(REPLY_MEMBER) REFERENCES MEMBER(NO) 
);
--DROP TABLE REPLY;

COMMENT ON COLUMN REPLY.REPLY_NO IS '댓글번호';
COMMENT ON COLUMN REPLY.REPLY_BOARD IS '댓글이작성된게시글';
COMMENT ON COLUMN REPLY.REPLY_MEMBER IS '댓글작성자';
COMMENT ON COLUMN REPLY.REPLY_CONT IS '댓글내용';
COMMENT ON COLUMN REPLY.REPLY_STATUS IS '댓글상태값(Y/N)';
COMMENT ON COLUMN REPLY.REPLY_DATE IS '댓글작성일';
COMMENT ON COLUMN REPLY.REPLY_MODIFY IS '댓글수정일';

CREATE SEQUENCE SEQ_REPLY_NO;
--DROP SEQUENCE SEQ_REPLY_NO;

INSERT INTO REPLY VALUES(SEQ_REPLY_NO.NEXTVAL, 1, 1, '안녕하세요.', DEFAULT, DEFAULT, DEFAULT);
INSERT INTO REPLY VALUES(SEQ_REPLY_NO.NEXTVAL, 2, 1, '반갑습니다.', DEFAULT, DEFAULT, DEFAULT);

------------------------------------------------
------------ 게시글 카테고리 관련 테이블 ------------
------------------------------------------------
CREATE TABLE BOARD_CATEGORY(
    CATEGORY_NO   NUMBER,
    CATEGORY_NAME VARCHAR2(50) NOT NULL,
    BOARD_NO NUMBER,
    CONSTRAINT PK_CATEGORY_NO PRIMARY KEY(CATEGORY_NO),
    CONSTRAINT FK_BOARD_NO FOREIGN KEY(BOARD_NO) REFERENCES BOARD(BOARD_NO)
);
--DROP TABLE BOARD_CATEGORY;

COMMENT ON COLUMN BOARD_CATEGORY.CATEGORY_NO IS '카테고리번호';
COMMENT ON COLUMN BOARD_CATEGORY.CATEGORY_NAME IS '카테고리명';
COMMENT ON COLUMN BOARD_CATEGORY.BOARD_NO IS '게시글번호';

CREATE SEQUENCE SEQ_CATEGORY_NO;
--DROP SEQUENCE SEQ_CATEGORY_NO;

INSERT INTO BOARD_CATEGORY VALUES(SEQ_CATEGORY_NO.NEXTVAL, '강아지', 1);
INSERT INTO BOARD_CATEGORY VALUES(SEQ_CATEGORY_NO.NEXTVAL, '고양이', 2);

------------------------------------------------
------------- 게시글 좋아요 관련 테이블 -------------
------------------------------------------------
CREATE TABLE BOARD_LIKE(
    LIKE_NO     NUMBER,
    LIKE_BOARD  NUMBER,
    LIKE_MEMBER NUMBER,
    CONSTRAINT PK_LIKE_NO     PRIMARY KEY(LIKE_NO),
    CONSTRAINT FK_LIKE_BOARD  FOREIGN KEY(LIKE_BOARD)  REFERENCES BOARD(BOARD_NO),
    CONSTRAINT FK_LIKE_MEMBER FOREIGN KEY(LIKE_MEMBER) REFERENCES MEMBER(NO)  -- 멤버테이블 생성 후
);
--DROP TABLE BOARD_LIKE;

COMMENT ON COLUMN BOARD_LIKE.LIKE_NO IS '좋아요번호';
COMMENT ON COLUMN BOARD_LIKE.LIKE_BOARD IS '좋아요된게시글';
COMMENT ON COLUMN BOARD_LIKE.LIKE_MEMBER IS '회원번호';

CREATE SEQUENCE SEQ_LIKE_NO;
--DROP SEQUENCE SEQ_LIKE_NO;

INSERT INTO BOARD_LIKE VALUES(SEQ_LIKE_NO.NEXTVAL, 1, 1);
INSERT INTO BOARD_LIKE VALUES(SEQ_LIKE_NO.NEXTVAL, 2, 1);

-----------------------------------------------
--------------- 찜목록 관련 테이블 ---------------
-----------------------------------------------
CREATE TABLE WISHLIST(
    WISH_NO     NUMBER,
    WISH_BOARD  NUMBER,
    WISH_MEMBER NUMBER,
    CONSTRAINT PK_WISH_NO PRIMARY KEY(WISH_NO),
    CONSTRAINT FK_WISH_BOARD FOREIGN KEY(WISH_BOARD) REFERENCES BOARD(BOARD_NO),
    CONSTRAINT FK_WISH_MEMBER FOREIGN KEY(WISH_MEMBER) REFERENCES MEMBER(NO)  -- 멤버테이블 생성 후
);
--DROP TABLE WISHLIST;

COMMENT ON COLUMN WISHLIST.WISH_NO IS '찜번호';
COMMENT ON COLUMN WISHLIST.WISH_BOARD IS '찜한게시글';
COMMENT ON COLUMN WISHLIST.WISH_MEMBER IS '회원번호';

CREATE SEQUENCE SEQ_WISH_NO;
--DROP SEQUENCE SEQ_WISH_NO;

INSERT INTO WISHLIST VALUES(SEQ_WISH_NO.NEXTVAL, 1, 1);
INSERT INTO WISHLIST VALUES(SEQ_WISH_NO.NEXTVAL, 2, 1);

--COMMIT;
